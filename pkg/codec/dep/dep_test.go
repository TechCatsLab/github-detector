/*
 * Revision History:
 *     Initial: 2018/07/27        Li Zebang
 */

package dep

import (
	"testing"
)

var (
	testtoml = `[[constraint]]
name = "github.com/Masterminds/semver"
branch = "2.x"

[[constraint]]
name = "github.com/Masterminds/vcs"
version = "1.11.0"

[[constraint]]
name = "github.com/pelletier/go-toml"
version = "1.1.0"

[[constraint]]
name = "github.com/pkg/errors"
version = "0.8.0"

[[constraint]]
name = "github.com/boltdb/bolt"
version = "1.0.0"

[[constraint]]
name = "github.com/jmank88/nuts"
version = "0.3.0"

[prune]
non-go = true
go-tests = true
unused-packages = true`

	deptoml = Manifest{
		Constraints: []Project{
			Project{
				Name:   "github.com/Masterminds/semver",
				Branch: "2.x",
			},
			Project{
				Name:    "github.com/Masterminds/vcs",
				Version: "1.11.0",
			},
			Project{
				Name:    "github.com/pelletier/go-toml",
				Version: "1.1.0",
			},
			Project{
				Name:    "github.com/pkg/errors",
				Version: "0.8.0",
			},
			Project{
				Name:    "github.com/boltdb/bolt",
				Version: "1.0.0",
			},
			Project{
				Name:    "github.com/jmank88/nuts",
				Version: "0.3.0",
			},
		},
		PruneOptions: PruneOptions{
			NonGoFiles:     true,
			GoTests:        true,
			UnusedPackages: true,
		},
	}

	testlock = `# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.


[[projects]]
  branch = "2.x"
  digest = "1:ee2887fecb4d923fa90f8dd9cf33e876bf9260fed62f2ca5a5c3f41b4eb07683"
  name = "github.com/Masterminds/semver"
  packages = ["."]
  pruneopts = "NUT"
  revision = "24642bd0573145a5ee04f9be773641695289be46"

[[projects]]
  digest = "1:442020d26d1f891d5014cae4353b6ff589562c2b303504627de3660adf3fb217"
  name = "github.com/Masterminds/vcs"
  packages = ["."]
  pruneopts = "NUT"
  revision = "3084677c2c188840777bff30054f2b553729d329"
  version = "v1.11.1"

[[projects]]
  branch = "master"
  digest = "1:60861e762bdbe39c4c7bf292c291329b731c9925388fd41125888f5c1c595feb"
  name = "github.com/armon/go-radix"
  packages = ["."]
  pruneopts = "NUT"
  revision = "4239b77079c7b5d1243b7b4736304ce8ddb6f0f2"

[[projects]]
  digest = "1:a12d94258c5298ead75e142e8001224bf029f302fed9e96cd39c0eaf90f3954d"
  name = "github.com/boltdb/bolt"
  packages = ["."]
  pruneopts = "NUT"
  revision = "2f1ce7a837dcb8da3ec595b1dac9d0632f0f99e8"
  version = "v1.3.1"

[[projects]]
  digest = "1:9f35c1344b56e5868d511d231f215edd0650aa572664f856444affdd256e43e4"
  name = "github.com/golang/protobuf"
  packages = ["proto"]
  pruneopts = "NUT"
  revision = "925541529c1fa6821df4e44ce2723319eb2be768"
  version = "v1.0.0"

[[projects]]
  digest = "1:f5169729244becc423886eae4d72547e28ac3f13f861bed8a9d749bc7238a1c3"
  name = "github.com/jmank88/nuts"
  packages = ["."]
  pruneopts = "NUT"
  revision = "8b28145dffc87104e66d074f62ea8080edfad7c8"
  version = "v0.3.0"

[[projects]]
  branch = "master"
  digest = "1:01af3a6abe28784782680e1f75ef8767cfc5d4b230dc156ff7eb8db395cbbfd2"
  name = "github.com/nightlyone/lockfile"
  packages = ["."]
  pruneopts = "NUT"
  revision = "e83dc5e7bba095e8d32fb2124714bf41f2a30cb5"

[[projects]]
  digest = "1:51ea800cff51752ff68e12e04106f5887b4daec6f9356721238c28019f0b42db"
  name = "github.com/pelletier/go-toml"
  packages = ["."]
  pruneopts = "NUT"
  revision = "c01d1270ff3e442a8a57cddc1c92dc1138598194"
  version = "v1.2.0"

[[projects]]
  digest = "1:5cf3f025cbee5951a4ee961de067c8a89fc95a5adabead774f82822efabab121"
  name = "github.com/pkg/errors"
  packages = ["."]
  pruneopts = "NUT"
  revision = "645ef00459ed84a119197bfb8d8205042c6df63d"
  version = "v0.8.0"

[[projects]]
  branch = "master"
  digest = "1:abb4b60c28323cde32c193ce6083bb600fac462d1780cf83461b4c23ed5ce904"
  name = "github.com/sdboyer/constext"
  packages = ["."]
  pruneopts = "NUT"
  revision = "836a144573533ea4da4e6929c235fd348aed1c80"

[[projects]]
  branch = "master"
  digest = "1:6ad2104db8f34b8656382ef0a7297b9a5cc42e7bdce95d968e02b92fc97470d1"
  name = "golang.org/x/net"
  packages = ["context"]
  pruneopts = "NUT"
  revision = "66aacef3dd8a676686c7ae3716979581e8b03c47"

[[projects]]
  branch = "master"
  digest = "1:39ebcc2b11457b703ae9ee2e8cca0f68df21969c6102cb3b705f76cca0ea0239"
  name = "golang.org/x/sync"
  packages = ["errgroup"]
  pruneopts = "NUT"
  revision = "f52d1811a62927559de87708c8913c1650ce4f26"

[[projects]]
  branch = "master"
  digest = "1:51912e607c5e28a89fdc7e41d3377b92086ab7f76ded236765dbf98d0a704c5d"
  name = "golang.org/x/sys"
  packages = ["unix"]
  pruneopts = "NUT"
  revision = "bb24a47a89eac6c1227fbcb2ae37a8b9ed323366"

[[projects]]
  branch = "v2"
  digest = "1:13e704c08924325be00f96e47e7efe0bfddf0913cdfc237423c83f9b183ff590"
  name = "gopkg.in/yaml.v2"
  packages = ["."]
  pruneopts = "NUT"
  revision = "d670f9405373e636a5a2765eea47fac0c9bc91a4"

[solve-meta]
  analyzer-name = "dep"
  analyzer-version = 1
  input-imports = [
    "github.com/Masterminds/semver",
    "github.com/Masterminds/vcs",
    "github.com/armon/go-radix",
    "github.com/boltdb/bolt",
    "github.com/golang/protobuf/proto",
    "github.com/jmank88/nuts",
    "github.com/nightlyone/lockfile",
    "github.com/pelletier/go-toml",
    "github.com/pkg/errors",
    "github.com/sdboyer/constext",
    "golang.org/x/sync/errgroup",
    "gopkg.in/yaml.v2",
  ]
  solver-name = "gps-cdcl"
  solver-version = 1`

	deplock = Lock{
		Projects: []LockedProject{
			LockedProject{
				Branch:    "2.x",
				Digest:    "1:ee2887fecb4d923fa90f8dd9cf33e876bf9260fed62f2ca5a5c3f41b4eb07683",
				Name:      "github.com/Masterminds/semver",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "24642bd0573145a5ee04f9be773641695289be46",
			},
			LockedProject{
				Digest:    "1:442020d26d1f891d5014cae4353b6ff589562c2b303504627de3660adf3fb217",
				Name:      "github.com/Masterminds/vcs",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "3084677c2c188840777bff30054f2b553729d329",
				Version:   "v1.11.1",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:60861e762bdbe39c4c7bf292c291329b731c9925388fd41125888f5c1c595feb",
				Name:      "github.com/armon/go-radix",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "4239b77079c7b5d1243b7b4736304ce8ddb6f0f2",
			},
			LockedProject{
				Digest:    "1:a12d94258c5298ead75e142e8001224bf029f302fed9e96cd39c0eaf90f3954d",
				Name:      "github.com/boltdb/bolt",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "2f1ce7a837dcb8da3ec595b1dac9d0632f0f99e8",
				Version:   "v1.3.1",
			},
			LockedProject{
				Digest:    "1:9f35c1344b56e5868d511d231f215edd0650aa572664f856444affdd256e43e4",
				Name:      "github.com/golang/protobuf",
				Packages:  []string{"proto"},
				PruneOpts: "NUT",
				Revision:  "925541529c1fa6821df4e44ce2723319eb2be768",
				Version:   "v1.0.0",
			},
			LockedProject{
				Digest:    "1:f5169729244becc423886eae4d72547e28ac3f13f861bed8a9d749bc7238a1c3",
				Name:      "github.com/jmank88/nuts",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "8b28145dffc87104e66d074f62ea8080edfad7c8",
				Version:   "v0.3.0",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:01af3a6abe28784782680e1f75ef8767cfc5d4b230dc156ff7eb8db395cbbfd2",
				Name:      "github.com/nightlyone/lockfile",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "e83dc5e7bba095e8d32fb2124714bf41f2a30cb5",
			},
			LockedProject{
				Digest:    "1:51ea800cff51752ff68e12e04106f5887b4daec6f9356721238c28019f0b42db",
				Name:      "github.com/pelletier/go-toml",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "c01d1270ff3e442a8a57cddc1c92dc1138598194",
				Version:   "v1.2.0",
			},
			LockedProject{
				Digest:    "1:5cf3f025cbee5951a4ee961de067c8a89fc95a5adabead774f82822efabab121",
				Name:      "github.com/pkg/errors",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "645ef00459ed84a119197bfb8d8205042c6df63d",
				Version:   "v0.8.0",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:abb4b60c28323cde32c193ce6083bb600fac462d1780cf83461b4c23ed5ce904",
				Name:      "github.com/sdboyer/constext",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "836a144573533ea4da4e6929c235fd348aed1c80",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:6ad2104db8f34b8656382ef0a7297b9a5cc42e7bdce95d968e02b92fc97470d1",
				Name:      "golang.org/x/net",
				Packages:  []string{"context"},
				PruneOpts: "NUT",
				Revision:  "66aacef3dd8a676686c7ae3716979581e8b03c47",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:39ebcc2b11457b703ae9ee2e8cca0f68df21969c6102cb3b705f76cca0ea0239",
				Name:      "golang.org/x/sync",
				Packages:  []string{"errgroup"},
				PruneOpts: "NUT",
				Revision:  "f52d1811a62927559de87708c8913c1650ce4f26",
			},
			LockedProject{
				Branch:    "master",
				Digest:    "1:51912e607c5e28a89fdc7e41d3377b92086ab7f76ded236765dbf98d0a704c5d",
				Name:      "golang.org/x/sys",
				Packages:  []string{"unix"},
				PruneOpts: "NUT",
				Revision:  "bb24a47a89eac6c1227fbcb2ae37a8b9ed323366",
			},
			LockedProject{
				Branch:    "v2",
				Digest:    "1:13e704c08924325be00f96e47e7efe0bfddf0913cdfc237423c83f9b183ff590",
				Name:      "gopkg.in/yaml.v2",
				Packages:  []string{"."},
				PruneOpts: "NUT",
				Revision:  "d670f9405373e636a5a2765eea47fac0c9bc91a4",
			},
		},
		SolveMeta: Meta{
			AnalyzerName:    "dep",
			AnalyzerVersion: 1,
			InputImports: []string{
				"github.com/Masterminds/semver",
				"github.com/Masterminds/vcs",
				"github.com/armon/go-radix",
				"github.com/boltdb/bolt",
				"github.com/golang/protobuf/proto",
				"github.com/jmank88/nuts",
				"github.com/nightlyone/lockfile",
				"github.com/pelletier/go-toml",
				"github.com/pkg/errors",
				"github.com/sdboyer/constext",
				"golang.org/x/sync/errgroup",
				"gopkg.in/yaml.v2",
			},
			SolverName:    "gps-cdcl",
			SolverVersion: 1,
		},
	}
)

func Test_depParser_ParseToml(t *testing.T) {
	toml, err := DepParser.ParseToml([]byte(testtoml))
	if err != nil {
		t.Errorf("Test_depParser_ParseToml() error %s\n", err)
	}
	for index := range toml.Constraints {
		if toml.Constraints[index].Name != deptoml.Constraints[index].Name ||
			toml.Constraints[index].Branch != deptoml.Constraints[index].Branch ||
			toml.Constraints[index].Revision != deptoml.Constraints[index].Revision ||
			toml.Constraints[index].Version != deptoml.Constraints[index].Version ||
			toml.Constraints[index].Source != deptoml.Constraints[index].Source {
			t.Errorf("Test_depParser_ParseToml() toml.Constraints[%d] = %v, not %v\n", index, toml.Constraints[index], deptoml.Constraints[index])
		}
	}
	if toml.PruneOptions.NonGoFiles != deptoml.PruneOptions.NonGoFiles ||
		toml.PruneOptions.GoTests != deptoml.PruneOptions.GoTests ||
		toml.PruneOptions.UnusedPackages != deptoml.PruneOptions.UnusedPackages {
		t.Errorf("Test_depParser_ParseToml() toml.PruneOptions = %v, not %v\n", toml.PruneOptions, deptoml.PruneOptions)
	}
}

func Test_depParser_ParseLock(t *testing.T) {
	lock, err := DepParser.ParseLock([]byte(testlock))
	if err != nil {
		t.Errorf("Test_depParser_ParseLock() error %s\n", err)
	}
	for index := range lock.Projects {
		if lock.Projects[index].Name != deplock.Projects[index].Name ||
			lock.Projects[index].Branch != deplock.Projects[index].Branch ||
			lock.Projects[index].Revision != deplock.Projects[index].Revision ||
			lock.Projects[index].Version != deplock.Projects[index].Version ||
			lock.Projects[index].Source != deplock.Projects[index].Source ||
			lock.Projects[index].PruneOpts != deplock.Projects[index].PruneOpts ||
			lock.Projects[index].Digest != deplock.Projects[index].Digest {
			t.Errorf("Test_depParser_ParseToml() lock.Projects[%d] = %v, not %v\n", index, lock.Projects[index], deplock.Projects[index])
		}
		for packagesIndex := range lock.Projects[index].Packages {
			if lock.Projects[index].Packages[packagesIndex] != deplock.Projects[index].Packages[packagesIndex] {
				t.Errorf("Test_depParser_ParseToml() lock.Projects[%d].Packages[%d] = %v, not %v\n", index, packagesIndex, lock.Projects[index].Packages[packagesIndex], deplock.Projects[index].Packages[packagesIndex])
			}
		}
	}
	if lock.SolveMeta.AnalyzerName != deplock.SolveMeta.AnalyzerName ||
		lock.SolveMeta.AnalyzerVersion != deplock.SolveMeta.AnalyzerVersion ||
		lock.SolveMeta.SolverName != deplock.SolveMeta.SolverName ||
		lock.SolveMeta.SolverVersion != deplock.SolveMeta.SolverVersion {
		t.Errorf("Test_depParser_ParseToml() lock.SolveMeta = %v, not %v\n", lock.SolveMeta, deplock.SolveMeta)
	}
	for index := range lock.SolveMeta.InputImports {
		if lock.SolveMeta.InputImports[index] != deplock.SolveMeta.InputImports[index] {
			t.Errorf("Test_depParser_ParseToml() lock.SolveMeta.InputImports[%d] = %s, not %s\n", index, lock.SolveMeta.InputImports[index], deplock.SolveMeta.InputImports[index])
		}
	}
}
